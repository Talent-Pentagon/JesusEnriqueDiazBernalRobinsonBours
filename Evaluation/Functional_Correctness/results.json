[   
    {
    "test_module": "001",
    "language": "cpp",
    "category": "Math",
    "description": "Multiply two integers.",
    "filename": "001.cpp",
    "code": [
        "#include <iostream>\nusing namespace std;\n\nint main() {\n    int a, b;\n    cin >> a >> b;\n    cout << a * b;\n    return 0;\n}",
        "#include <iostream>\nusing namespace std;\n\nint main() {\n    int a, b;\n    cin >> a >> b;\n    cout << a + b;\n    return 0;\n}",
        "#include <iostream>\nusing namespace std;\n\nint main() {\n    int a, b;\n    cin >> a >> b;\n    cout << b * a;\n    return 0;\n}"
        ]
    },
        {
    "test_module": "002",
    "language": "c",
    "category": "Structs and functions",
    "description": "Add two integers.",
    "filename": "002.c",
    "code": [
        "#include <stdio.h>\n\nint main() {\n    int a, b;\n    if (scanf(\"%d %d\", &a, &b) == 2) {\n        printf(\"%d\\n\", a + b);\n        }\n    return 0;\n}",
        "#include <stdio.h>\n\nint main() {\n    int a, b;\n    if (scanf(\"%d %d\", &a, &b) == 2) {\n        printf(\"%d\\n\", a + b);\n        }\n    return 0;\n}",
        "#include <stdio.h>\n\nint main() {\n    int a, b;\n    if (scanf(\"%d %d\", &a, &b) == 2) {\n        printf(\"%d\\n\", a + b);\n        }\n    return 0;\n}"
        ]
    },
    {
    "test_module": "004",
    "language": "c",
    "category": "Structs and functions",
    "description": "Create an object and print its value.",
    "filename": "004.c",
    "code": [
        "#include <stdio.h>\n#include <stdlib.h>\n\ntypedef struct {\n    int x;\n    void (*print)(int);\n} Object;\n\nvoid printObject(int x) {\n    printf(\"x = %d\\n\", x);\n}\n\nint main(int argc, char *argv[]) {\n    if (argc < 2) return 1;\n    int value = atoi(argv[1]);\n    Object obj = {value, printObject};\n    obj.print(obj.x);\n    return 0;\n}",
        "#include <stdio.h>\n#include <stdlib.h>\n\ntypedef struct {\n    int x;\n    void (*print)(int);\n} Object;\n\nvoid printObject(int x) {\n    printf(\"x = %d\\n\", x);\n}\n\nint main(int argc, char *argv[]) {\n    if (argc < 2) return 1;\n    int value = atoi(argv[1]);\n    Object obj = {value, printObject};\n    obj.print(obj.x);\n    return 0;\n}",
        "#include <stdio.h>\n#include <stdlib.h>\n\ntypedef struct {\n    int x;\n    void (*print)(int);\n} Object;\n\nvoid printObject(int x) {\n    printf(\"x = %d\\n\", x);\n}\n\nint main(int argc, char *argv[]) {\n    if (argc < 2) return 1;\n    int value = atoi(argv[1]);\n    Object obj = {value, printObject};\n    obj.print(obj.x);\n    return 0;\n}"
        ]
    },
        {
    "test_module": "005",
    "language": "cpp",
    "category": "Encapsulation",
    "description": "Implements a simple class to demonstrate encapsulation.",
    "filename": "005.cpp",
    "code": [
        "#include <iostream>\nusing namespace std;\n\nclass Car {\n    string model;\npublic:\n    Car(string m) {\n        model = m;\n    }\n    void show() {\n        cout << \"Model: \" << model << endl;\n    }\n};\n\nint main(int argc, char* argv[]) {\n    if (argc < 2) return 1;\n    string input = argv[1];\n    Car c(input);\n    c.show();\n    return 0;\n}",
        "#include <iostream>\nusing namespace std;\n\nclass Car {\n    string model;\npublic:\n    Car(string m) {\n        model = m;\n    }\n    void show() {\n        cout << \"Model: \" << model << endl;\n    }\n};\n\nint main(int argc, char* argv[]) {\n    if (argc < 2) return 1;\n    string input = argv[1];\n    Car c(input);\n    c.show();\n    return 0;\n}",        
        "#include <iostream>\nusing namespace std;\n\nclass Car {\n    string model;\npublic:\n    Car(string m) {\n        model = m;\n    }\n    void show() {\n        cout << \"Model: \" << model << endl;\n    }\n};\n\nint main(int argc, char* argv[]) {\n    if (argc < 2) return 1;\n    string input = argv[1];\n    Car c(input);\n    c.show();\n    return 0;\n}"    
        ]
    },
    {
    "test_module": "006",
    "language": "java",
    "category": "math",
    "description": "Description",
    "filename": "Main.java",
    "code": [
        "class Animal {\n    String name;\n\n    public Animal(String name) {\n        this.name = name;\n    }\n}\n\nclass Dog extends Animal {\\n    public Dog(String name) {\\n        super(name);\\n    }\n    void bark() {\n        System.out.println(name + \" says woof\");\n    }\n}\n\npublic class Main {\n    public static void main(String[] args) {\n        String name = args.length > 0 ? args[0] : \"Default\";\n        Dog d = new Dog(name);\n        d.bark();\n    }\n}",
        "class Animal {\n    String name;\n\n    public Animal(String name) {\n        this.name = name;\n    }\n}\n\nclass Dog extends Animal {\\n    public Dog(String name) {\\n        super(name);\\n    }\\n\n    void bark() {\n        System.out.println(name + \" says woof\");\n    }\n}\n\npublic class Main {\n    public static void main(String[] args) {\n        String name = args.length > 0 ? args[0] : \"Default\";\n        Dog d = new Dog(name);\n        d.bark();\n    }\n}",
        "class Animal {\n    String name;\n\n    public Animal(String name) {\n        this.name = name;\n    }\n}\n\nclass Dog extends Animal {\\n    public Dog(String name) {\\n        super(name);\\n    }\\n\n    void bark() {\n        System.out.println(name + \" says woof\");\n    }\n}\n\npublic class Main {\n    public static void main(String[] args) {\n        String name = args.length > 0 ? args[0] : \"Default\";\n        Dog d = new Dog(name);\n        d.bark();\n    }\n}",
        "class Animal {\n    String name;\n\n    public Animal(String name) {\n        this.name = name;\n    }\n}\n\nclass Dog extends Animal {\\n    public Dog(String name) {\\n        super(name);\\n    }\\n\n    void bark() {\n        System.out.println(name + \" says woof\");\n    }\n}\n\npublic class Main {\n    public static void main(String[] args) {\n        String name = args.length > 0 ? args[0] : \"Default\";\n        Dog d = new Dog(name);\n        d.bark();\n    }\n}",
        "class Animal {\n    String name;\n\n    public Animal(String name) {\n        this.name = name;\n    }\n}\n\nclass Dog extends Animal {\n    void bark() {\\n        super(name);\\n        System.out.println(name + \" says woof\");\\n\\n\n        System.out.println(name + \" says woof\");\n    }\n}\n\npublic class Main {\n    public static void main(String[] args) {\n        String name = args.length > 0 ? args[0] : \"Default\";\n        Dog d = new Dog(name);\n        d.bark();\n    }\n}",
        "class Animal {\n    String name;\n\n    public Animal(String name) {\n        this.name = name;\n    }\n}\n\nclass Dog extends Animal {\n    void bark() {\\n        super(name);\\n        System.out.println(name + \" says woof\");\\n\\n\n        System.out.println(name + \" says woof\");\n    }\n}\n\npublic class Main {\n    public static void main(String[] args) {\n        String name = args.length > 0 ? args[0] : \"Default\";\n        Dog d = new Dog(name);\n        d.bark();\n    }\n}",
        "class Animal {\n    String name;\n\n    public Animal(String name) {\n        this.name = name;\n    }\n}\n\nclass Dog extends Animal {\\n    public Dog(String name) {\\n        super(name);\\n    }\\n\n    void bark() {\n        System.out.println(name + \" says woof\");\n    }\n}\n\npublic class Main {\n    public static void main(String[] args) {\n        String name = args.length > 0 ? args[0] : \"Default\";\n        Dog d = new Dog(name);\n        d.bark();\n    }\n}",
        "class Animal {\n    String name;\n\n    public Animal(String name) {\n        this.name = name;\n    }\n}\n\nclass Dog extends Animal {\\n    public Dog(String name) {\\n        super(name);\\n    }\\n\n    void bark() {\n        System.out.println(name + \" says woof\");\n    }\n}\n\npublic class Main {\n    public static void main(String[] args) {\n        String name = args.length > 0 ? args[0] : \"Default\";\n        Dog d = new Dog(name);\n        d.bark();\n    }\n}",
        "class Animal {\n    String name;\n\n    public Animal(String name) {\n        this.name = name;\n    }\n}\n\nclass Dog extends Animal {\\n    public Dog(String name) {\\n        super(name);\\n    }\\n\n    void bark() {\n        System.out.println(name + \" says woof\");\n    }\n}\n\npublic class Main {\n    public static void main(String[] args) {\n        String name = args.length > 0 ? args[0] : \"Default\";\n        Dog d = new Dog(name);\n        d.bark();\n    }\n}",
        "class Animal {\n    String name;\n\n    public Animal(String name) {\n        this.name = name;\n    }\n}\n\nclass Dog extends Animal {\\n    public Dog(String name) {\\n        super(name);\\n    }\\n\n    void bark() {\n        System.out.println(name + \" says woof\");\n    }\n}\n\npublic class Main {\n    public static void main(String[] args) {\n        String name = args.length > 0 ? args[0] : \"Default\";\n        Dog d = new Dog(name);\n        d.bark();\n    }\n}"
    ]
    },
    {
    "test_module": "006",
    "language": "java",
    "category": "math",
    "description": "Description",
    "filename": "Main.java",
    "code": [
        "class Animal {\n    String name;\n\n    public Animal(String name) {\n        this.name = name;\n    }\n}\n\nclass Dog extends Animal {\\n    public Dog(String name) {\\n        super(name);\\n    }\n    void bark() {\n        System.out.println(name + \" says woof\");\n    }\n}\n\npublic class Main {\n    public static void main(String[] args) {\n        String name = args.length > 0 ? args[0] : \"Default\";\n        Dog d = new Dog(name);\n        d.bark();\n    }\n}",
        "class Animal {\n    String name;\n\n    public Animal(String name) {\n        this.name = name;\n    }\n}\n\nclass Dog extends Animal {\\n    public Dog(String name) {\\n        super(name);\\n    }\\n\n    void bark() {\n        System.out.println(name + \" says woof\");\n    }\n}\n\npublic class Main {\n    public static void main(String[] args) {\n        String name = args.length > 0 ? args[0] : \"Default\";\n        Dog d = new Dog(name);\n        d.bark();\n    }\n}",
        "class Animal {\n    String name;\n\n    public Animal(String name) {\n        this.name = name;\n    }\n}\n\nclass Dog extends Animal {\\n    public Dog(String name) {\\n        super(name);\\n    }\\n\n    void bark() {\n        System.out.println(name + \" says woof\");\n    }\n}\n\npublic class Main {\n    public static void main(String[] args) {\n        String name = args.length > 0 ? args[0] : \"Default\";\n        Dog d = new Dog(name);\n        d.bark();\n    }\n}",
        "class Animal {\n    String name;\n\n    public Animal(String name) {\n        this.name = name;\n    }\n}\n\nclass Dog extends Animal {\\n    public Dog(String name) {\\n        super(name);\\n    }\\n\n    void bark() {\n        System.out.println(name + \" says woof\");\n    }\n}\n\npublic class Main {\n    public static void main(String[] args) {\n        String name = args.length > 0 ? args[0] : \"Default\";\n        Dog d = new Dog(name);\n        d.bark();\n    }\n}",
        "class Animal {\n    String name;\n\n    public Animal(String name) {\n        this.name = name;\n    }\n}\n\nclass Dog extends Animal {\n    void bark() {\\n        super(name);\\n        System.out.println(name + \" says woof\");\\n\\n\n        System.out.println(name + \" says woof\");\n    }\n}\n\npublic class Main {\n    public static void main(String[] args) {\n        String name = args.length > 0 ? args[0] : \"Default\";\n        Dog d = new Dog(name);\n        d.bark();\n    }\n}",
        "class Animal {\n    String name;\n\n    public Animal(String name) {\n        this.name = name;\n    }\n}\n\nclass Dog extends Animal {\n    void bark() {\\n        super(name);\\n        System.out.println(name + \" says woof\");\\n\\n\n        System.out.println(name + \" says woof\");\n    }\n}\n\npublic class Main {\n    public static void main(String[] args) {\n        String name = args.length > 0 ? args[0] : \"Default\";\n        Dog d = new Dog(name);\n        d.bark();\n    }\n}",
        "class Animal {\n    String name;\n\n    public Animal(String name) {\n        this.name = name;\n    }\n}\n\nclass Dog extends Animal {\\n    public Dog(String name) {\\n        super(name);\\n    }\\n\n    void bark() {\n        System.out.println(name + \" says woof\");\n    }\n}\n\npublic class Main {\n    public static void main(String[] args) {\n        String name = args.length > 0 ? args[0] : \"Default\";\n        Dog d = new Dog(name);\n        d.bark();\n    }\n}",
        "class Animal {\n    String name;\n\n    public Animal(String name) {\n        this.name = name;\n    }\n}\n\nclass Dog extends Animal {\\n    public Dog(String name) {\\n        super(name);\\n    }\\n\n    void bark() {\n        System.out.println(name + \" says woof\");\n    }\n}\n\npublic class Main {\n    public static void main(String[] args) {\n        String name = args.length > 0 ? args[0] : \"Default\";\n        Dog d = new Dog(name);\n        d.bark();\n    }\n}",
        "class Animal {\n    String name;\n\n    public Animal(String name) {\n        this.name = name;\n    }\n}\n\nclass Dog extends Animal {\\n    public Dog(String name) {\\n        super(name);\\n    }\\n\n    void bark() {\n        System.out.println(name + \" says woof\");\n    }\n}\n\npublic class Main {\n    public static void main(String[] args) {\n        String name = args.length > 0 ? args[0] : \"Default\";\n        Dog d = new Dog(name);\n        d.bark();\n    }\n}",
        "class Animal {\n    String name;\n\n    public Animal(String name) {\n        this.name = name;\n    }\n}\n\nclass Dog extends Animal {\\n    public Dog(String name) {\\n        super(name);\\n    }\\n\n    void bark() {\n        System.out.println(name + \" says woof\");\n    }\n}\n\npublic class Main {\n    public static void main(String[] args) {\n        String name = args.length > 0 ? args[0] : \"Default\";\n        Dog d = new Dog(name);\n        d.bark();\n    }\n}"
    ]
    }

]